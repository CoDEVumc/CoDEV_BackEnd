<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codevumc.codev_backend.mapper.CoChatMapper">

    <!--채팅방 만들기-->
    <insert id="createChatRoom" parameterType="ChatRoom">
        INSERT INTO ChatRoom (roomId, room_type, room_title)
        VALUES (#{roomId}, #{room_type}, #{room_title});
    </insert>

    <!--채팅방 목록 조회-->
    <select id="getChatRooms" resultType="ChatRoom">
        SELECT CR.roomId, CR.room_type, CR.room_title, CROU.isRead, CROU.status, pinfo.co_email as receiverCo_email, pinfo.co_nickName as receiverCo_nickName, pinfo.profileImg as receiverProfileImg, cnt.people as people
        FROM ChatRoom CR
                 JOIN (select crou.roomId,cu.co_email, cu.co_nickName, cu.profileImg
                       from ChatRoomOfUser crou
                                join CoUser cu on cu.co_email = crou.co_email
                       where cu.co_email != #{co_email}) pinfo ON CR.roomId = pinfo.roomId
                 JOIN ChatRoomOfUser CROU on CROU.roomId = CR.roomId
                 JOIN (
            select roomId, count(*) as people
            from ChatRoomOfUser
            group by roomId) as cnt on cnt.roomId = CR.roomId
        WHERE CROU.co_email = #{co_email}
        ORDER BY CROU.updatedAt DESC
    </select>

    <select id="getUserInfo" resultType="CoUser">
        select profileImg, co_nickName
        from CoUser
        where co_email = #{co_email}
    </select>

    <select id="getChatRoomUser" resultType="ChatRoomOfUser">
        SELECT CO.co_email, CO.co_nickName, CO.profileImg, CROU.isRead
        FROM ChatRoomOfUser CROU
        JOIN CoUser CO on CROU.co_email = CO.co_email
        WHERE CROU.roomId = #{roomId}
    </select>

    <!--채팅방 초대-->
    <insert id="inviteUser">
        INSERT INTO ChatRoomOfUser (roomId, co_email)
        VALUES (#{roomId}, #{co_email})
    </insert>

    <!--채팅방 입장-->
    <update id="readMessage">
        UPDATE ChatRoomOfUser
        SET isRead = true
        WHERE roomId = #{roomId} AND co_email = #{co_email}
    </update>

    <!--채팅방 입장-->
    <update id="enterChatRoom">
        UPDATE ChatRoomOfUser
        SET status = true
        WHERE roomId = #{roomId} AND co_email = #{co_email}
    </update>

    <!--채팅방 퇴장-->
    <update id="closeChatRoom">
        UPDATE ChatRoomOfUser
        SET status = false
        WHERE roomId = #{roomId} AND co_email = #{co_email}
    </update>

    <!--메세지 보내기-->
    <update id="sendMessage">
        UPDATE ChatRoomOfUser
        SET isRead = false
        WHERE status = false AND roomId = #{roomId}
    </update>

    <select id="getChatRoom" resultType="ChatRoomOfUser">
        SELECT crou.roomId, crou.co_email, cu.co_nickName, cu.profileImg
        FROM ChatRoomOfUser crou
        JOIN CoUser cu on crou.co_email = cu.co_email
        WHERE crou.roomId = #{roomId}
    </select>


    <delete id="exitChatRoom">
        DELETE FROM ChatRoomOfUser WHERE co_email = #{co_email} AND roomId = #{roomId}
    </delete>


</mapper>