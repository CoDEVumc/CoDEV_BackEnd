<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codevumc.codev_backend.mapper.CoProjectMapper">

    <insert id="insertCoProject" parameterType="CoProject" useGeneratedKeys="true" keyProperty="co_projectId">
        INSERT INTO CoProject
            (co_email, co_title, co_location, co_content, co_process, co_deadLine)
        VALUES (#{co_email}, #{co_title}, #{co_location}, #{co_content}, #{co_process}, #{co_deadLine})
    </insert>

    <insert id="insertCoPartOfProject" parameterType="hashMap">
        INSERT INTO CoPartOfProject
            (co_projectId, co_part, co_limit)
        VALUES (#{co_projectId}, #{co_part}, #{co_limit})
    </insert>

    <insert id="insertCoLanguageOfProject">
        INSERT INTO CoLanguageOfProject
        (co_projectId, co_languageId)
        values (#{co_projectId}, #{co_languageId})
    </insert>

    <update id="updateCoMainImg">
        UPDATE CoProject
        SET co_mainImg = #{co_mainImg}
        WHERE `co_projectId` = #{co_projectId};
    </update>

    <select id="getCoProject" resultType="CoProject">
        select * from CoProject where co_projectId = #{co_projectId}
    </select>

    <select id ="getCoHeartOfProject" resultType="CoHeartOfProject">
        SELECT status FROM CoHeartOfProject WHERE co_projectId = ${co_projectId}
    </select>

    <select id="getCoProjects" parameterType="hashMap" resultType="CoProject">
        select distinct cp.co_projectId as 'co_projectId',
        cp.co_email as 'co_email',
        cp.co_title as 'co_title',
        cp.co_location as 'co_location',
        cp.co_content as 'co_content',
        cp.co_mainImg as 'co_mainImg',
        cp.co_process as 'co_process',
        DATEDIFF(cp.co_deadLine, now())           as 'co_deadLine',
        IF(chp.status is null, false, chp.status) as 'co_heart',
        (select count(*) from CoHeartOfProject as chpcnt where cp.co_projectId = chpcnt.co_projectId) as 'co_heartCount',
        clp.co_languages as 'co_languages',
        cpp.co_parts as 'co_parts',
        cpIs.co_total as 'co_total',
        cp.createdAt as 'createdAt',
        cp.updatedAt as 'updatedAt',
        cp.status as 'status'
        from CoProject as cp
        left join CoHeartOfProject as chp on cp.co_projectId = chp.co_projectId and chp.co_email = #{co_email}
        left join (select co_projectId, sum(co_limit) as 'co_total'
        from CoPartOfProject
        group by CoPartOfProject.co_projectId) as cpIs on cpIs.co_projectId = cp.co_projectId
        left join (select co_projectId, GROUP_CONCAT(co_part SEPARATOR ',') as co_parts
        from CoPartOfProject
        where co_limit != 0 group by co_projectId) as cpp
        on cpp.co_projectId = cp.co_projectId
        left join (select co_projectId, GROUP_CONCAT(cl.co_logo SEPARATOR ',') as co_languages
        from CoLanguageOfProject as clo
        join CoLanguage as cl on clo.co_languageId = cl.co_languageId
        group by co_projectId) as clp
        on cp.co_projectId = clp.co_projectId
        where
        <if test="co_locationTag != null and !co_locationTag.equals('')">
            cp.co_location = #{co_locationTag} and
        </if>
        <if test="co_partTag != null and !co_partTag.equals('')">
            cpp.co_parts like #{co_partTag} and
        </if>
        <if test="co_keyword != null and !co_keyword.equals('')">
            (cp.co_title like #{co_keyword} or cp.co_content like #{co_keyword}) and
        </if>
        <if test="co_processTag != null and !co_processTag.equals('')">
            cp.co_process = #{co_processTag} and
        </if>
        cp.status = true
        order by
        <choose>
            <when test='co_sortingTag.equals("POPULARITY")'>
                co_heartCount desc limit
            </when>
            <otherwise>
                createdAt desc limit
            </otherwise>
        </choose>
        #{limit} offset #{offset}
    </select>

    <insert id ="insertCoHeartOfProject" >
        INSERT INTO CoHeartOfProject (co_email,co_projectId)
        VALUES (#{co_email},#{co_projectId})
    </insert>

    <delete id="deleteCoHeartOfProject">
        DELETE FROM CoHeartOfProject
        WHERE co_projectId = #{co_projectId}
    </delete>

    <select id="getCoPartList" resultType="CoPartOfProject">
        select co_part, co_limit from CoPartOfProject where co_projectId = #{co_projectId}
    </select>

    <select id="getCoLanguageList" resultType="CoLanguageOfProject">
        select cl.co_languageId, cl.co_language, cl.co_logo from CoLanguageOfProject cop
        join CoLanguage cl on cl.co_languageId = cop.co_languageId
        where co_projectId = #{co_projectId}
    </select>

    <select id="getCoHeartCount" resultType="Long">
        select count(*) as coHeartCount from CoHeartOfProject where co_projectId = #{co_projectId}
    </select>

    <delete id="deleteCoProject" parameterType="hashMap">
        delete from CoProject where co_email = #{co_email} and co_projectId = #{co_projectId}
    </delete>

</mapper>