<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codevumc.codev_backend.mapper.CoStudyMapper">

    <select id="getCoStudies" parameterType="hashMap" resultType="CoStudy">
        select distinct cs.co_studyId as 'co_studyId',
        cs.co_email as 'co_email',
        cs.co_title as 'co_title',
        cs.co_location as 'co_location',
        cs.co_content as 'co_content',
        cs.co_mainImg as 'co_mainImg',
        cs.co_process as 'co_process',
        DATEDIFF(cs.co_deadLine, now())           as 'co_deadLine',
        IF(chs.status is null, false, chs.status) as 'co_heart',
        (select count(*) from CoHeartOfStudy as chscnt where cs.co_studyId = chscnt.co_studyId) as 'co_heartCount',
        cls.co_languages as 'co_languages',
        cps.co_part as 'co_part',
        cps.co_total as 'co_total',
        cs.createdAt as 'createdAt',
        cs.updatedAt as 'updatedAt',
        cs.status as 'status'
        from CoStudy as cs
        left join CoHeartOfStudy as chs on cs.co_studyId = chs.co_studyId and chs.co_email = #{co_email}
        left join CoPartOfStudy as cps on cs.co_studyId = cps.co_studyId
        left join (select co_studyId, GROUP_CONCAT(cl.co_logo SEPARATOR ',') as co_languages
        from CoLanguageOfStudy as clo
        join CoLanguage as cl on clo.co_languageId = cl.co_languageId
        group by co_studyId) as cls
        on cs.co_studyId = cls.co_studyId
        where
        <if test="co_locationTag != null and !co_locationTag.equals('')">
            cs.co_location = #{co_locationTag} and
        </if>
        <if test="co_partTag != null and !co_partTag.equals('')">
            cps.co_part like #{co_partTag} and
        </if>
        <if test="co_keyword != null and !co_keyword.equals('')">
            (cs.co_title like #{co_keyword} or cs.co_content like #{co_keyword}) and
        </if>
        <if test="co_processTag != null and !co_processTag.equals('')">
            cs.co_process = #{co_processTag} and
        </if>
        cs.status = true
        order by
        <choose>
            <when test='co_sortingTag.equals("POPULARITY")'>
                co_heartCount desc limit
            </when>
            <otherwise>
                createdAt desc limit
            </otherwise>
        </choose>
        #{limit} offset #{offset}
    </select>

    <select id ="getCoHeartOfStudy" resultType="CoHeartOfStudy">
        SELECT status FROM CoHeartOfStudy WHERE co_studyId = ${co_studyId}
    </select>

    <select id ="getCoHeartOfStudyEmail" resultType="String">
        SELECT co_email FROM CoHeartOfStudy WHERE co_studyId = ${co_studyId}
    </select>

    <select id="getCoStudy" resultType="CoStudy">
        select
            cs.co_studyId as co_studyId,
            cs.co_email as co_email,
            cs.co_title as co_title,
            cs.co_location as co_location,
            cs.co_content as co_content,
            cs.co_mainImg as co_mainImg,
            cs.co_deadLine as co_deadLine,
            cs.co_process as co_process,
            cpos.co_total as co_total,
            cpos.co_part as co_part,
            cs.createdAt as createdAt,
            cs.updatedAt as updatedAt,
            cs.status as status
        from CoStudy cs
        left join CoPartOfStudy cpos on cs.co_studyId = cpos.co_studyId
        where cs.co_studyId = #{co_studyId}
    </select>

    <select id="getCoLanguageList" resultType="CoLanguageOfStudy">
        select cl.co_languageId, cl.co_language, cl.co_logo
        from CoLanguageOfStudy cop
        join CoLanguage cl on cl.co_languageId = cop.co_languageId
        where cop.co_studyId = #{co_studyId}
    </select>

    <select id="getCoHeartCount" resultType="Long">
        select count(*) as coHeartCount from CoHeartOfStudy where co_studyId = #{co_studyId}
    </select>

    <select id="getCoRecruitStatus" resultType="boolean">
        select EXISTS(select * from CoRecruitOfStudy where co_email = #{co_viewer} and co_studyId = #{co_studyId}) as co_recruitStatus
    </select>

    <insert id ="insertCoHeartOfStudy" >
        INSERT INTO CoHeartOfStudy (co_email,co_studyId)
        VALUES (#{co_email},#{co_studyId})
    </insert>

    <delete id="deleteCoHeartOfStudy">
        DELETE FROM CoHeartOfStudy
        WHERE co_studyId = ${co_studyId}
    </delete>

    <insert id="insertCoStudy" parameterType="hashMap" useGeneratedKeys="true" keyProperty="co_studyId">
        insert into CoStudy
            (co_email, co_title, co_location, co_content, co_deadLine, co_process)
        values (#{co_email}, #{co_title}, #{co_location}, #{co_content}, #{co_deadLine}, #{co_process});
    </insert>

    <update id="updateCoStudy" parameterType="CoStudy">
        update CoStudy
        set co_title = #{co_title},
            co_location = #{co_location},
            co_content = #{co_content},
            co_mainImg = null,
            co_process = #{co_process},
            co_deadLine = #{co_deadLine}
        where co_studyId = #{co_studyId}
    </update>

    <delete id="deleteCoLanguageOfStudy">
        delete from CoLanguageOfStudy where co_studyId = #{co_studyId}
    </delete>

    <insert id="insertCoLanguageOfStudy">
        INSERT INTO CoLanguageOfStudy
            (co_studyId, co_languageId)
        values (#{co_studyId}, #{co_languageId})
    </insert>

    <update id="updateCoMainImg">
        UPDATE CoStudy
        SET co_mainImg = #{co_mainImg}
        WHERE co_studyId = #{co_studyId}
    </update>

    <insert id="insertCoPartOfStudy" parameterType="hashMap">
        INSERT INTO CoPartOfStudy
            (co_studyId, co_part, co_total)
        VALUES (#{co_studyId}, #{co_part}, #{co_total})
    </insert>

    <delete id="deleteCoStudy" parameterType="hashMap">
        delete from CoStudy where co_email = #{co_email} and co_studyId = #{co_studyId}
    </delete>

    <delete id="deleteRecruitOfStudy" parameterType="hashMap">
        delete from CoRecruitOfStudy where co_email = #{co_email} and co_studyId = #{co_studyId}
    </delete>

    <insert id="insertCoRecruitOfStudy">
        insert into CoRecruitOfStudy(co_email, co_studyId, co_portfolioId, co_motivation)
        values (#{co_email}, #{co_studyId}, #{co_portfolioId}, #{co_motivation})
    </insert>

    <select id="getCoStudyApplicants" resultType="CoRecruitOfStudy">
        select cos.* from CoRecruitOfStudy cos
        left join CoStudy cs on cs.co_studyId = cos.co_studyId
        where cs.co_email = #{co_email} and cos.co_studyId = #{co_studyId}
    </select>

</mapper>