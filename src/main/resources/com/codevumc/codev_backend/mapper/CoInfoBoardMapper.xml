<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codevumc.codev_backend.mapper.CoInfoBoardMapper">

    <update id="updateCoMainImg">
        UPDATE CoInfoBoard
        SET co_mainImg = #{co_mainImg}
        WHERE `co_infoId` = #{co_infoId};
    </update>

    <insert id="insertCoInfoBoard" parameterType="CoInfoBoard" useGeneratedKeys="true" keyProperty="co_infoId">
        INSERT INTO CoInfoBoard
            (co_email, co_title, content)
        VALUES (#{co_email}, #{co_title}, #{content})
    </insert>

    <insert id="insertCoCommentOfQnaBoard" parameterType="CoCommentOfInfoBoard" useGeneratedKeys="true" keyProperty="co_coib">
        INSERT INTO CoCommentOfInfoBoard
            (co_email, co_infoId, content)
        VALUES (#{co_email}, #{co_infoId}, #{content})
    </insert>

    <insert id="insertCoReCommentOfInfoBoard" parameterType="CoReCommentOfInfoBoard">
        INSERT INTO CoReCommentOfInfoBoard
            (co_email, co_coib, content)
        VALUES (#{co_email}, #{co_coib}, #{content})
    </insert>

    <select id="getCoInfoBoards" parameterType="hashMap" resultType="CoInfoBoard">
        select distinct
            cib.co_infoId as 'co_infoId',
            cib.co_email as 'co_email',
            cu.profileImg as 'profileImg',
            cib.co_title as 'co_title',
            substr(cib.content, 1, 40) as 'content',
            cib.co_mainImg as 'co_mainImg',
            (select count(*) from CoLikeOfInfoBoard cloib where cloib.co_infoId = cib.co_infoId) as 'co_likeCount',
            (select
                     (select count(*) from CoCommentOfInfoBoard ccoib2 where ccoib2.co_infoId = cib.co_infoId) +
                     (select count(*) from CoReCommentOfInfoBoard crcoib where crcoib.co_coib = ccoib.co_coib)) as 'co_commentCount',
            (select count(*) from CoMarkOfInfoBoard cmoib where cmoib.co_infoId = cib.co_infoId) as 'co_markCount',
            cib.createdAt as 'createdAt',
            cib.updatedAt as 'updatedAt'
        from CoInfoBoard cib
                 left join CoUser cu on cib.co_email = cu.co_email
                 left join CoCommentOfInfoBoard ccoib on cib.co_infoId = ccoib.co_infoId
        where
        <if test="co_keyword != null and !co_keyword.equals('')">
            cib.co_title like #{co_keyword} or cib.content like #{co_keyword} and
        </if>
        <if test="co_myBoard != null and !co_myBoard.equals('')">
            cib.co_email = #{co_email} and
        </if>
        cib.createdAt is not null
        order by
        <choose>
            <when test='co_sortingTag.equals("POPULARITY")'>
                co_likeCount desc limit
            </when>
            <otherwise>
                createdAt desc limit
            </otherwise>
        </choose>
        #{limit} offset #{offset}
    </select>

    <select id ="getCoMarkOfInfoBoardEmail" resultType="Long">
        SELECT co_moib FROM CoMarkOfInfoBoard
        WHERE co_email=#{co_email} AND co_infoId=#{co_infoId}
    </select>

    <insert id ="insertCoMarkOfInfoBoard">
        INSERT INTO CoMarkOfInfoBoard (co_email,co_infoId)
        VALUES(#{co_email},#{co_infoId})
    </insert>

    <delete id ="deleteCoMarkOfInfoBoard">
        DELETE FROM CoMarkOfInfoBoard
        WHERE co_email =#{co_email} AND co_infoId = #{co_infoId}
    </delete>

</mapper>