<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.codevumc.codev_backend.mapper.CoInfoBoardMapper">

    <update id="updateCoMainImg">
        UPDATE CoInfoBoard
        SET co_mainImg = #{co_mainImg}
        WHERE `co_infoId` = #{co_infoId};
    </update>

    <insert id="insertCoInfoBoard" parameterType="CoInfoBoard" useGeneratedKeys="true" keyProperty="co_infoId">
        INSERT INTO CoInfoBoard
            (co_email, co_title, content)
        VALUES (#{co_email}, #{co_title}, #{content})
    </insert>

    <insert id="insertCoCommentOfInfoBoard" parameterType="CoCommentOfInfoBoard" useGeneratedKeys="true" keyProperty="co_coib">
        INSERT INTO CoCommentOfInfoBoard
            (co_email, co_infoId, content)
        VALUES (#{co_email}, #{co_infoId}, #{content})
    </insert>

    <insert id="insertCoReCommentOfInfoBoard" parameterType="CoReCommentOfInfoBoard">
        INSERT INTO CoReCommentOfInfoBoard
            (co_email, co_coib, content)
        VALUES (#{co_email}, #{co_coib}, #{content})
    </insert>

    <select id="getCoInfoBoards" parameterType="hashMap" resultType="CoInfoBoard">
        select distinct
            cib.co_infoId as 'co_infoId',
            cib.co_email as 'co_email',
            #{co_email} as 'co_viewer',
            cu.co_nickName as 'co_nickname',
            cu.profileImg as 'profileImg',
            cib.co_title as 'co_title',
            substr(cib.content, 1, 40) as 'content',
            cib.co_mainImg as 'co_mainImg',
            (select count(*) from CoLikeOfInfoBoard cloib where cloib.co_infoId = cib.co_infoId) as 'co_likeCount',
            (select
                     (select count(*) from CoCommentOfInfoBoard ccoib2 where ccoib2.co_infoId = cib.co_infoId) +
                     (select count(*) from CoReCommentOfInfoBoard crcoib where crcoib.co_coib = ccoib.co_coib)) as 'co_commentCount',
            (select count(*) from CoMarkOfInfoBoard cmoib where cmoib.co_infoId = cib.co_infoId) as 'co_markCount',
            cib.createdAt as 'createdAt',
            cib.updatedAt as 'updatedAt'
        from CoInfoBoard cib
                 left join CoUser cu on cib.co_email = cu.co_email
                 left join CoCommentOfInfoBoard ccoib on cib.co_infoId = ccoib.co_infoId
        where cib.createdAt is not null
        <if test="coMyBoard != null and !coMyBoard.equals('')">
            and cib.co_email = #{coMyBoard}
        </if>
        order by createdAt desc limit #{limit} offset #{offset}
    </select>

    <select id ="getCoMarkOfInfoBoardEmail" resultType="Long">
        SELECT co_moib FROM CoMarkOfInfoBoard
        WHERE co_email=#{co_email} AND co_infoId=#{co_infoId}
    </select>

    <insert id ="insertCoMarkOfInfoBoard">
        INSERT INTO CoMarkOfInfoBoard (co_email,co_infoId)
        VALUES(#{co_email},#{co_infoId})
    </insert>

    <delete id ="deleteCoMarkOfInfoBoard">
        DELETE FROM CoMarkOfInfoBoard
        WHERE co_email =#{co_email} AND co_infoId = #{co_infoId}
    </delete>

    <select id="getCoInfoBoardByViewer" parameterType="hashMap" resultType="CoInfoBoard">
        select  cib.co_infoId                                                               as 'co_infoId',
                cib.co_email                                                                as 'co_email',
                cu.co_nickname                                                              as 'co_nickname',
                cib.co_title                                                                as 'co_title',
                cib.content                                                                 as 'content',
                (select count(co_infoId) from CoLikeOfInfoBoard where co_infoId = #{co_infoId}) as 'co_likeCount',
                (select SUM(C.cnt)
                 from(
                         select count(ccoib.co_infoId) as cnt
                         from CoCommentOfInfoBoard as ccoib
                         where ccoib.co_infoId = #{co_infoId}

                         UNION ALL

                         select count(crcoib.co_coib) as cnt
                         from CoReCommentOfInfoBoard as crcoib
                         left join CoCommentOfInfoBoard as ccoib on crcoib.co_coib = ccoib.co_coib
                         where ccoib.co_infoId = #{co_infoId}
                     )C)                                                                    as 'co_commentCount',
                if(cmoib.co_moib, 1, 0)                                                     as 'co_mark',
                if(cloib.co_loib, 1, 0)                                                     as 'co_like',
                cib.createdAt                                                               as 'createdAt',
                cib.updatedAt                                                               as 'updatedAt'
        from CoInfoBoard as cib
                 left join CoUser cu on cib.co_email = cu.co_email
                 left join (select co_infoId,
                                   co_moib
                            from CoMarkOfInfoBoard
                            where co_infoId = #{co_infoId} and co_email = #{co_viewer}) cmoib on cib.co_infoId = cmoib.co_infoId
                 left join (select co_infoId,
                                   co_loib
                            from CoLikeOfInfoBoard
                            where co_infoId = #{co_infoId} and co_email = #{co_viewer}) cloib on cib.co_infoId = cloib.co_infoId
        where cib.co_infoId = #{co_infoId};
    </select>

    <select id="getCoMarkOfInfoBoards" resultType="CoMarkOfInfoBoard">
        select * from CoMarkOfInfoBoard where co_email=#{co_email}
    </select>
    <select id="getCoMarkOfInfoBoard" resultType="CoInfoBoard">
        SELECT
            cib.co_infoId AS 'co_infoId',
                cib.co_email AS 'co_email',
                cib.co_title AS 'co_title',
                cib.content AS 'content',
                COUNT(cli.co_infoId) AS 'co_likeCount',
                (
                    SELECT COUNT( ccoib.co_infoId) as cnt
                    FROM CoCommentOfInfoBoard as ccoib
                    WHERE ccoib.co_infoId = cib.co_infoId
                ) +
                    (
                        SELECT COUNT(crcoib.co_coib) as cnt
                        FROM CoReCommentOfInfoBoard as crcoib
                                 LEFT JOIN (
                            SELECT co_coib, co_infoId
                            FROM CoCommentOfInfoBoard
                        ) ccoib ON ccoib.co_coib = crcoib.co_coib
                        WHERE ccoib.co_infoId = cib.co_infoId
                    ) AS 'co_commentCount',
                if(cmoib.co_moib, 1, 0) as 'co_markCount',
                cib.createdAt,
            cib.updatedAt
        FROM CoMarkOfInfoBoard cmoib
                 JOIN CoInfoBoard cib ON cib.co_infoId = cmoib.co_infoId
                 LEFT JOIN (
            SELECT co_infoId
            FROM CoCommentOfInfoBoard
        ) as ccoib ON ccoib.co_infoId = cib.co_infoId
                 LEFT JOIN CoLikeOfInfoBoard AS cli
                           ON cli.co_infoId = cib.co_infoId
        WHERE cmoib.co_email = #{co_email}
        GROUP BY cib.co_infoId, cib.co_title, cmoib.co_moib, cib.content, cib.createdAt, cib.updatedAt;

    </select>

    <select id="getComment" resultType="CoCommentOfInfoBoard" resultMap="commentResult">
        select ccoib.co_coib as 'co_coib',
               ccoib.co_infoId as 'co_infoId',
               ccoib.co_email as 'co_email',
               cu.co_nickname as 'co_nickname',
               ccoib.content as 'content',
               ccoib.createdAt as 'createdAt'
        from CoCommentOfInfoBoard as ccoib
        left join CoUser cu on ccoib.co_email = cu.co_email
        where co_infoId = #{co_infoId}
    </select>

    <select id="getReComment" resultType="CoReCommentOfInfoBoard">
        select crcoib.co_rcoib as 'co_rcoib',
               crcoib.co_coib as 'co_coib',
               crcoib.co_email as 'co_email',
               cu.co_nickname as 'co_nickname',
               crcoib.content as 'content',
               crcoib.createdAt as 'createdAt'
        from CoReCommentOfInfoBoard as crcoib
        left join CoUser cu on crcoib.co_email = cu.co_email
        where co_coib = #{co_coib}
    </select>

    <delete id="deleteInfoBoard" parameterType="hashMap">
        delete from CoInfoBoard where co_email = #{co_email} and co_infoId = #{co_infoId}
    </delete>

    <resultMap id="commentResult" type="CoCommentOfInfoBoard">
        <result property="co_coib" column="CO_COIB"/>
        <result property="co_infoId" column="CO_INFOID"/>
        <result property="co_email" column="CO_EMAIL"/>
        <result property="co_nickname" column="CO_NICKNAME"/>
        <result property="content" column="CONTENT"/>
        <result property="createdAt" column="CREATEDAT"/>
        <collection property="coReCommentOfInfoBoardList" column="CO_COIB" javaType="java.util.ArrayList" ofType="CoReCommentOfInfoBoard" select="getReComment"/>
    </resultMap>

    <select id="getInfoBoard" resultType="coInfoBoard">
        select * from CoInfoBoard where co_infoId=#{co_infoId}
    </select>

    <update id="updateCoInfoBoard" parameterType="CoInfoBoard">
        UPDATE CoInfoBoard
        SET co_title = #{co_title},
            content = #{content}
        WHERE co_infoId = #{co_infoId}
    </update>
    
    <select id="getCoInfoComment" resultType="CoCommentOfInfoBoard">
        select * from CoCommentOfInfoBoard where co_coib = #{co_coib}
    </select>

    <select id="getCoInfoReComment" resultType="CoReCommentOfInfoBoard">
        select * from CoReCommentOfInfoBoard where co_rcoib = #{co_rcoib}
    </select>

    <delete id="deleteCoInfoComment" parameterType="hashMap">
        delete from CoCommentOfInfoBoard where co_email = #{co_email} and co_coib = #{co_coib}
    </delete>

    <delete id="deleteCoInfoReComment" parameterType="hashMap">
        delete from CoReCommentOfInfoBoard where co_email = #{co_email} and co_rcoib = #{co_rcoib}
    </delete>

    <insert id="insertLikeCoInfoBoard" parameterType="CoLikeOfInfoBoard">
        INSERT INTO CoLikeOfInfoBoard (co_email,co_infoId)
        VALUES(#{co_email},#{co_infoId})
    </insert>

    <delete id="deleteLikeCoInfoBoard" parameterType="CoLikeOfInfoBoard">
        delete from CoLikeOfInfoBoard where co_email = #{co_email} and co_infoId = #{co_infoId}
    </delete>

</mapper>